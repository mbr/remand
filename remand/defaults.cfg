[Match:.*]
# the default transport to use
transport=ssh

# use sudo enables a proc.sudo to be setup before the script executes
# if set to 'auto', enabled if the username is not root
use_sudo=auto

# automatically reboot if requested
auto_reboot=true

# automatically reconnect if requested
auto_reconnect=true

# delay before reconnecting
reconnect_delay=1

# additional delay before rebooting
reboot_delay=25

# download cache, if not set, defaults to system-specific
download_cache=

# private key file, leave empty for the default
ssh_private_key=

# the umask to reset to
reset_umask=022

# maximum difference between host and remote time. set to None to disable check
max_time_diff=30

# buffer size for IO operations, used by some library functions
buffer_size=32768

# SSH Options:
# known_hosts files to load. can use the path separator (: on Linux) to
# specify multiple
load_known_hosts=~/.ssh/known_hosts

# if a host key is not found in known_hosts, perform this action. valid values
# are:
#   'abort':        fail with an error message
#   'ask':          offer to continue connection
#   'ask_to_save':  like ask, but also save the key back to known_hosts
#   'ignore':       just warn, but always keep connecting (very unsafe)
on_missing_host_key=abort

# user to login as by default
user=root

# ssh connection timeout (seconds)
ssh_connect_timeout=15

# ssh connection attempts
ssh_connect_retries=10

# ssh connection delay before trying to connect again
ssh_connect_retry_delay=25

# timeout after which a command is considered failed
ssh_command_timeout

# command to invoke sftp. if None, uses subsystem sftp instead of a command
sftp_command

# when invoking the SFTP server explicitly, this is the key
sftp_location=/usr/lib/openssh/sftp-server

# enable pipelining (using paramiko's SFTPFile.set_pipelined)
# disabling this will result in a dramatic performance decrease when
# transfering large files
sftp_pipelined=true

# enables caching of info-values to avoid having to re-run data gathering
# operations
info_cache=true

# vagrant configuration
vagrant_secret_key=/usr/share/vagrant/keys/vagrant
vagrant_unset_ssh_auth_sock=true

# Filesystem Options:
# how to verify (and possibly transfer) contents of remote files
# valid values are:
#   'stat':     uses the stat info, if a file has the same size and
#               modification date on both sides, it is considered unchanged
#   'rsync':    uses rsync on the remote side to check for changes, will only
#               transfer changed chunks (not implemented)
#   'sha1sum':  uses the sha1sum utility to check for changes, transfers full
#               file
#   'read':     downloads the remote file to compare it locally
#   'ignore':   always copies over the full file, do not check
fs_remote_file_verify=stat
fs_remote_string_verify=sha1sum

# how to upload
# valid values:
#  'write':     write using remote's open function
#  'rsync':     transfer using rsync
fs_remote_file_upload=write
fs_remote_string_upload=write

# whether or not to update the mtime timestamps of uploaded files.
# required if you want ``fs_remote_file_verify=stat`` to work
fs_update_mtime=true

# different filesystems often do not have matching resolutions for the mtime
# timestamp. to rectify, remand casts every mtime to int after multiplying with
# this multiplier. setting it to 1 will preserve second resolution, 1000 will
# give milisecond resolution, etc.
fs_mtime_multiplier=1

# if mktemp is not available on a system, emulate the command by creating
# temporary directories in this directory
fs_fallback_tmpdir=/tmp

# Command availabiliy
# any of the commands below are used by some modules, either optionally or
# mandatory, setting these to a full path lets you override which are called
#
# if set to None, they are not used even if available
cmd_sha1sum=sha1sum
cmd_rsync=rsync
cmd_date=date
cmd_sudo=sudo
cmd_apt_get=apt-get
cmd_lsb_release=lsb-release
cmd_apt_cache=apt-cache
cmd_dpkg=dpkg
cmd_dpkg_query=dpkg-query
cmd_virtualenv=virtualenv
cmd_tar=tar
cmd_useradd=useradd
cmd_userdel=userdel
cmd_mktemp=mktemp
cmd_shutdown=shutdown
cmd_uname=uname
cmd_chown=chown
cmd_systemctl=systemctl
cmd_nc-openbsd=nc.openbsd
cmd_venv = virtualenv
cmd_chroot = chroot

# posix
# if systemd is true, systemd commands (like systemctl reboot) will be
# preferred over traditional sysv ones
systemd=true
remote_os=posix

# SSH library
ssh_authorized_keys_file={home}/.ssh/authorized_keys

# systemd suppport
systemd_unit_dir=/etc/systemd/system
systemd_network_dir=/etc/systemd/network

# apt
apt_sources_list=/etc/apt/sources.list
apt_sources_list_d=/etc/apt/sources.list.d
apt_preferences_d=/etc/apt/preferences.d

# sslcert
sslcert_cert_dir=/etc/ssl
sslcert_key_dir=/etc/ssl/private

# sysv
sysv_initd=/etc/init.d

# python
venv_python_path = python3
